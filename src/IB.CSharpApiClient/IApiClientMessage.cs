using System;
using IB.CSharpApiClient.Messages;

namespace IB.CSharpApiClient
{
    public interface IApiClientMessage
    {
        event Action<AccountDownloadEndMessage> AccountDownloadEnd;
        event Action<AccountSummaryMessage> AccountSummary;
        event Action<AccountSummaryEndMessage> AccountSummaryEnd;
        event Action<AccountUpdateMultiMessage> AccountUpdateMulti;
        event Action<AccountUpdateMultiEndMessage> AccountUpdateMultiEnd;
        event Action<AccountValueMessage> AccountValue;
        event Action<AdvisorDataMessage> AdvisorData;
        event Action<BondContractDetailsMessage> BondContractDetails;
        event Action<CommissionReportMessage> CommissionReport;
        event Action ConnectionClosed;
        event Action<ConnectionStatusMessage> ConnectionStatus;
        event Action<ContractDetailsMessage> ContractDetails;
        event Action<ContractDetailsEndMessage> ContractDetailsEnd;
        event Action<DailyPnLMessage> DailyPnL;
        event Action<DailyPnLSingleMessage> DailyPnLSingle;
        event Action<DeepBookMessage> DeepBook;
        event Action<DeltaNeutralValidationMessage> DeltaNeutralValidation;
        event Action<ErrorMessage> Error;
        event Action<ExecutionMessage> Execution;
        event Action<ExecutionEndMessage> ExecutionEnd;
        event Action<FamilyCodesMessage> FamilyCodes;
        event Action<FundamentalsMessage> Fundamentals;
        event Action<HeadTimestampMessage> HeadTimestamp;
        event Action<HistogramDataMessage> HistogramData;
        event Action<HistoricalDataMessage> HistoricalData;
        event Action<HistoricalDataEndMessage> HistoricalDataEnd;
        event Action<HistoricalDataMessage> HistoricalDataUpdate;
        event Action<HistoricalNewsMessage> HistoricalNews;
        event Action<HistoricalNewsEndMessage> HistoricalNewsEnd;
        event Action<HistoricalTickMessage> HistoricalTick;
        event Action<HistoricalTickBidAskMessage> HistoricalTickBidAsk;
        event Action<HistoricalTickBidAskEndMessage> HistoricalTickBidAskEnd;
        event Action<HistoricalTickEndMessage> HistoricalTickEnd;
        event Action<HistoricalTickLastEventArgs> HistoricalTickLast;
        event Action<HistoricalTickLastEndEventArgs> HistoricalTickLastEnd;
        event Action<ManagedAccountsMessage> ManagedAccounts;
        event Action<MarketDataTypeMessage> MarketDataType;
        event Action<MarketRuleMessage> MarketRule;
        event Action<MktDepthExchangesMessage> MktDepthExchanges;
        event Action<NewsArticleMessage> NewsArticle;
        event Action<NewsProvidersMessage> NewsProviders;
        event Action<OpenOrderMessage> OpenOrder;
        event Action OpenOrderEnd;
        event Action<OrderStatusMessage> OrderStatus;
        event Action<PositionMessage> Position;
        event Action PositionEnd;
        event Action<PositionMultiMessage> PositionMulti;
        event Action<PositionMultiEndMessage> PositionMultiEnd;
        event Action<RealTimeBarMessage> RealTimeBar;
        event Action<ScannerMessage> Scanner;
        event Action<ScannerEndMessage> ScannerEnd;
        event Action<ScannerParametersMessage> ScannerParameters;
        event Action<SecurityDefinitionOptionParameterMessage> SecurityDefinitionOptionParameter;
        event Action<SecurityDefinitionOptionParameterEndMessage> SecurityDefinitionOptionParameterEnd;
        event Action<SoftDollarTiersMessage> SoftDollarTiers;
        event Action<SymbolSamplesMessage> SymbolSamples;
        event Action<TickByTickAllLastMessage> TickByTickAllLast;
        event Action<TickByTickBidAskMessage> TickByTickBidAsk;
        event Action<TickByTickMidPointMessage> TickByTickMidPoint;
        event Action<TickEfpMessage> TickEfp;
        event Action<TickGenericMessage> TickGeneric;
        event Action<TickNewsMessage> TickNews;
        event Action<TickOptionMessage> TickOption;
        event Action<TickPriceMessage> TickPrice;
        event Action<TickReqParamsMessage> TickReqParams;
        event Action<TickSizeMessage> TickSize;
        event Action<TickSnapshotEndMessage> TickSnapshotEnd;
        event Action<TickStringMessage> TickString;
        event Action<TimeMessage> Time;
        event Action<UpdateAccountTimeMessage> UpdateAccountTime;
        event Action<UpdatePortfolioMessage> UpdatePortfolio;
        event Action ConnectAck;
        event Action<UpdateNewsBulletinMessage> UpdateNewsBulletin;
        event Action<VerifyMessageApiMessage> VerifyMessageApi;
        event Action<VerifyCompletedMessage> VerifyCompleted;
        event Action<VerifyAndAuthMessageApiMessage> VerifyAndAuthMessageApi;
        event Action<VerifyAndAuthCompletedMessage> VerifyAndAuthCompleted;
        event Action<DisplayGroupListMessage> DisplayGroupList;
        event Action<DisplayGroupUpdatedMessage> DisplayGroupUpdated;
        event Action<SmartComponentsMessage> SmartComponents;
        event Action<RerouteRequestMessage> RerouteMktDataRequest;
        event Action<RerouteRequestMessage> RerouteMktDepthRequest;
    }
}